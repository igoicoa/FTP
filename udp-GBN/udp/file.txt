In this book, we’ll use the public Internet, a specific computer network, as our principal vehicle for
discussing computer networks and their protocols. But what is the Internet? There are a couple of ways
to answer this question. First, we can describe the nuts and bolts of the Internet, that is, the basic
hardware and software components that make up the Internet. Second, we can describe the Internet in
terms of a networking infrastructure that provides services to distributed applications. Let’s begin with
the nuts-and-bolts description, using Figure 1.1 to illustrate our discussion.
1.1.1 A Nuts-and-Bolts Description
The Internet is a computer network that interconnects billions of computing devices throughout the
world. Not too long ago, these computing devices were primarily traditional desktop PCs, Linux
workstations, and so-called servers that store and transmit information such as Web pages and e-mail
messages. Increasingly, however, nontraditional Internet “things” such as laptops, smartphones, tablets,
TVs, gaming consoles, thermostats, home security systems, home appliances, watches, eye glasses,
cars, traffic control systems and more are being connected to the Internet. Indeed, the term computer
network is beginning to sound a bit dated, given the many nontraditional devices that are being hooked
up to the Internet. In Internet jargon, all of these devices are called hosts or end systems. By some
estimates, in 2015 there were about 5 billion devices connected to the Internet, and the number will
reach 25 billion by 2020 [Gartner 2014]. It is estimated that in 2015 there were over 3.2 billion Internet
users worldwide, approximately 40% of the world population [ITU 2015].Figure 1.1 Some pieces of the Internet
End systems are connected together by a network of communication links and packet switches.
We’ll see in Section 1.2 that there are many types of communication links, which are made up ofdifferent types of physical media, including coaxial cable, copper wire, optical fiber, and radio spectrum.
Different links can transmit data at different rates, with the transmission rate of a link measured in
bits/second. When one end system has data to send to another end system, the sending end system
segments the data and adds header bytes to each segment. The resulting packages of information,
known as packets in the jargon of computer networks, are then sent through the network to the
destination end system, where they are reassembled into the original data.
A packet switch takes a packet arriving on one of its incoming communication links and forwards that
packet on one of its outgoing communication links. Packet switches come in many shapes and flavors,
but the two most prominent types in today’s Internet are routers and link-layer switches. Both types of
switches forward packets toward their ultimate destinations. Link-layer switches are typically used in
access networks, while routers are typically used in the network core. The sequence of communication
links and packet switches traversed by a packet from the sending end system to the receiving end
system is known as a route or path through the network. Cisco predicts annual global IP traffic will pass
the zettabyte (10 21 bytes) threshold by the end of 2016, and will reach 2 zettabytes per year by 2019
[Cisco VNI 2015].
Packet-switched networks (which transport packets) are in many ways similar to transportation networks
of highways, roads, and intersections (which transport vehicles). Consider, for example, a factory that
needs to move a large amount of cargo to some destination warehouse located thousands of kilometers
away. At the factory, the cargo is segmented and loaded into a fleet of trucks. Each of the trucks then
independently travels through the network of highways, roads, and intersections to the destination
warehouse. At the destination warehouse, the cargo is unloaded and grouped with the rest of the cargo
arriving from the same shipment. Thus, in many ways, packets are analogous to trucks, communication
links are analogous to highways and roads, packet switches are analogous to intersections, and end
systems are analogous to buildings. Just as a truck takes a path through the transportation network, a
packet takes a path through a computer network.
End systems access the Internet through Internet Service Providers (ISPs), including residential ISPs
such as local cable or telephone companies; corporate ISPs; university ISPs; ISPs that provide WiFi
access in airports, hotels, coffee shops, and other public places; and cellular data ISPs, providing
mobile access to our smartphones and other devices. Each ISP is in itself a network of packet switches
and communication links. ISPs provide a variety of types of network access to the end systems,
including residential broadband access such as cable modem or DSL, high-speed local area network
access, and mobile wireless access. ISPs also provide ­ Internet access to content providers,
connecting Web sites and video servers directly to the Internet. The Internet is all about connecting end
systems to each other, so the ISPs that provide access to end systems must also be interconnected.
These lower-tier ISPs are interconnected through national and international upper-tier ISPs such as
Level 3 Communications, AT&T, Sprint, and NTT. An upper-tier ISP consists of high-speed routers
interconnected with high-speed fiber-optic links. Each ISP network, whether upper-tier or lower-tier, ismanaged independently, runs the IP protocol (see below), and conforms to certain naming and address
conventions. We’ll examine ISPs and their interconnection more closely in Section 1.3.
End systems, packet switches, and other pieces of the Internet run protocols that control the sending
and receiving of information within the Internet. The Transmission Control Protocol (TCP) and the
Internet Protocol (IP) are two of the most important protocols in the Internet. The IP protocol specifies
the format of the packets that are sent and received among routers and end systems. The Internet’s
principal protocols are collectively known as TCP/IP. We’ll begin looking into protocols in this
introductory chapter. But that’s just a start—much of this book is concerned with computer network
protocols!
Given the importance of protocols to the Internet, it’s important that everyone agree on what each and
every protocol does, so that people can create systems and products that interoperate. This is where
standards come into play. Internet ­ standards are developed by the Internet Engineering Task Force
(IETF) [IETF 2016]. The IETF standards documents are called requests for comments (RFCs) . RFCs
started out as general requests for comments (hence the name) to resolve network and protocol design
problems that faced the precursor to the Internet [Allman 2011]. RFCs tend to be quite technical and
detailed. They define protocols such as TCP, IP, HTTP (for the Web), and SMTP (for e-mail). There are
currently more than 7,000 RFCs. Other bodies also specify standards for network components, most
notably for network links. The IEEE 802 LAN/MAN Standards Committee [IEEE 802 2016], for example,
specifies the Ethernet and wireless WiFi standards.
1.1.2 A Services Description
Our discussion above has identified many of the pieces that make up the Internet. But we can also
describe the Internet from an entirely different angle—namely, as an infrastructure that provides
services to applications. In addition to traditional applications such as e-mail and Web surfing, Internet
applications include mobile smartphone and tablet applications, including Internet messaging, mapping
with real-time road-traffic information, music streaming from the cloud, movie and television streaming,
online social networks, video conferencing, multi-person games, and location-based recommendation
systems. The applications are said to be distributed applications, since they involve multiple end
systems that exchange data with each other. Importantly, Internet applications run on end systems—
they do not run in the packet switches in the network core. Although packet switches facilitate the
exchange of data among end systems, they are not concerned with the application that is the source or
sink of data.
Let’s explore a little more what we mean by an infrastructure that provides ­ services to applications. To
this end, suppose you have an exciting new idea for a distributed Internet application, one that may
greatly benefit humanity or one that may simply make you rich and famous. How might you go abouttransforming this idea into an actual Internet application? Because applications run on end systems, you
are going to need to write programs that run on the end systems. You might, for example, write your
programs in Java, C, or Python. Now, because you are developing a distributed Internet application, the
programs running on the different end systems will need to send data to each other. And here we get to
a central issue—one that leads to the alternative way of describing the Internet as a platform for
applications. How does one program running on one end system instruct the Internet to deliver data to
another program running on another end system?
End systems attached to the Internet provide a socket interface that specifies how a program running
on one end system asks the Internet infrastructure to deliver data to a specific destination program
running on another end system. This Internet socket interface is a set of rules that the sending program
must follow so that the Internet can deliver the data to the destination program. We’ll discuss the
Internet socket interface in detail in Chapter 2. For now, let’s draw upon a simple analogy, one that we
will frequently use in this book. Suppose Alice wants to send a letter to Bob using the postal service.
Alice, of course, can’t just write the letter (the data) and drop the letter out her window. Instead, the
postal service requires that Alice put the letter in an envelope; write Bob’s full name, address, and zip
code in the center of the envelope; seal the envelope; put a stamp in the upper-right-hand corner of the
envelope; and finally, drop the envelope into an official postal service mailbox. Thus, the postal service
has its own “postal service interface,” or set of rules, that Alice must follow to have the postal service
deliver her letter to Bob. In a similar manner, the Internet has a socket interface that the program
sending data must follow to have the Internet deliver the data to the program that will receive the data.
The postal service, of course, provides more than one service to its customers. It provides express
delivery, reception confirmation, ordinary use, and many more services. In a similar manner, the Internet
provides multiple services to its applications. When you develop an Internet application, you too must
choose one of the Internet’s services for your application. We’ll describe the Internet’s services in
Chapter 2.
We have just given two descriptions of the Internet; one in terms of its hardware and software
components, the other in terms of an infrastructure for providing services to distributed applications. But
perhaps you are still confused as to what the Internet is. What are packet switching and TCP/IP? What
are routers? What kinds of communication links are present in the Internet? What is a distributed
application? How can a thermostat or body scale be attached to the Internet? If you feel a bit
overwhelmed by all of this now, don’t worry—the purpose of this book is to introduce you to both the
nuts and bolts of the Internet and the principles that govern how and why it works. We’ll explain these
important terms and questions in the following sections and chapters.
1.1.3 What Is a Protocol?Now that we’ve got a bit of a feel for what the Internet is, let’s consider another important buzzword in
computer networking: protocol. What is a protocol? What does a protocol do?
A Human Analogy
It is probably easiest to understand the notion of a computer network protocol by first considering some
human analogies, since we humans execute protocols all of the time. Consider what you do when you
want to ask someone for the time of day. A typical exchange is shown in Figure 1.2. Human protocol (or
good manners, at least) dictates that one first offer a greeting (the first “Hi” in Figure 1.2) to initiate
communication with someone else. The typical response to a “Hi” is a returned “Hi” message. Implicitly,
one then takes a cordial “Hi” response as an indication that one can proceed and ask for the time of day.
A different response to the initial “Hi” (such as “Don’t bother me!” or “I don’t speak English,” or some
unprintable reply) might
Figure 1.2 A human protocol and a computer network protocol
indicate an unwillingness or inability to communicate. In this case, the human protocol would be not to
ask for the time of day. Sometimes one gets no response at all to a question, in which case one typically
gives up asking that person for the time. Note that in our human protocol, there are specific messageswe send, and specific actions we take in response to the received reply messages or other events (such
as no reply within some given amount of time). Clearly, transmitted and received messages, and actions
taken when these messages are sent or received or other events occur, play a central role in a human
protocol. If people run different protocols (for example, if one person has manners but the other does
not, or if one understands the concept of time and the other does not) the protocols do not interoperate
and no useful work can be accomplished. The same is true in networking—it takes two (or more)
communicating entities running the same protocol in order to accomplish a task.
Let’s consider a second human analogy. Suppose you’re in a college class (a computer networking
class, for example!). The teacher is droning on about protocols and you’re confused. The teacher stops
to ask, “Are there any questions?” (a message that is transmitted to, and received by, all students who
are not sleeping). You raise your hand (transmitting an implicit message to the teacher). Your teacher
acknowledges you with a smile, saying “Yes . . .” (a transmitted message encouraging you to ask your
question—teachers love to be asked questions), and you then ask your question (that is, transmit your
message to your teacher). Your teacher hears your question (receives your question message) and
answers (transmits a reply to you). Once again, we see that the transmission and receipt of messages,
and a set of conventional actions taken when these messages are sent and received, are at the heart of
this question-and-answer protocol.
Network Protocols
A network protocol is similar to a human protocol, except that the entities exchanging messages and
taking actions are hardware or software components of some device (for example, computer,
smartphone, tablet, router, or other network-capable device). All activity in the Internet that involves two
or more communicating remote entities is governed by a protocol. For example, hardware-implemented
protocols in two physically connected computers control the flow of bits on the “wire” between the two
network interface cards; congestion-control protocols in end systems control the rate at which packets
are transmitted between sender and receiver; protocols in routers determine a packet’s path from
source to destination. Protocols are running everywhere in the Internet, and consequently much of this
book is about computer network protocols.
As an example of a computer network protocol with which you are probably familiar, consider what
happens when you make a request to a Web server, that is, when you type the URL of a Web page into
your Web browser. The scenario is illustrated in the right half of Figure 1.2. First, your computer will
send a connection request message to the Web server and wait for a reply. The Web server will
eventually receive your connection request message and return a connection reply message. Knowing
that it is now OK to request the Web document, your computer then sends the name of the Web page it
wants to fetch from that Web server in a GET message. Finally, the Web server returns the Web page
(file) to your computer.Given the human and networking examples above, the exchange of messages and the actions taken
when these messages are sent and received are the key defining elements of a protocol:
A protocol defines the format and the order of messages exchanged between two or more
communicating entities, as well as the actions taken on the transmission and/or receipt of a message
or other event.
The Internet, and computer networks in general, make extensive use of protocols. Different protocols
are used to accomplish different communication tasks. As you read through this book, you will learn that
some protocols are simple and straightforward, while others are complex and intellectually deep.
Mastering the field of computer networking is equivalent to understanding the what, why, and how of
networking protocols.1.2 The Network Edge
In the previous section we presented a high-level overview of the Internet and networking protocols. We
are now going to delve a bit more deeply into the components of a computer network (and the Internet,
in particular). We begin in this section at the edge of a network and look at the components with which
we are most ­ familiar—namely, the computers, smartphones and other devices that we use on a daily
basis. In the next section we’ll move from the network edge to the network core and examine switching
and routing in computer networks.
Recall from the previous section that in computer networking jargon, the computers and other devices
connected to the Internet are often referred to as end systems. They are referred to as end systems
because they sit at the edge of the Internet, as shown in Figure 1.3. The Internet’s end systems include
desktop computers (e.g., desktop PCs, Macs, and Linux boxes), servers (e.g., Web and e-mail servers),
and mobile devices (e.g., laptops, smartphones, and tablets). Furthermore, an increasing number of
non-traditional “things” are being attached to the Internet as end ­ systems (see the Case History
feature).
End systems are also referred to as hosts because they host (that is, run) application programs such as
a Web browser program, a Web server program, an e-mail client program, or an e-mail server program.
Throughout this book we will use theFigure 1.3 End-system interaction
CASE HISTORY
THE INTERNET OF THINGS
Can you imagine a world in which just about everything is wirelessly connected to the Internet?
A world in which most people, cars, bicycles, eye glasses, watches, toys, hospital equipment,
home sensors, classrooms, video surveillance systems, atmospheric sensors, store-shelfproducts, and pets are connected? This world of the Internet of Things (IoT) may actually be just
around the corner.
By some estimates, as of 2015 there are already 5 billion things connected to the Internet, and
the number could reach 25 billion by 2020 [Gartner 2014]. These things include our
smartphones, which already follow us around in our homes, offices, and cars, reporting our geo-
locations and usage data to our ISPs and Internet applications. But in addition to our
smartphones, a wide-variety of non-traditional “things” are already available as products. For
example, there are Internet-connected wearables, including watches (from Apple and many
others) and eye glasses. Internet-connected glasses can, for example, upload everything we see
to the cloud, allowing us to share our visual experiences with people around the world in real-
time. There are Internet-connected things already available for the smart home, including
Internet-connected thermostats that can be controlled remotely from our smartphones, and
Internet-connected body scales, enabling us to graphically review the progress of our diets from
our smartphones. There are Internet-connected toys, including dolls that recognize and interpret
a child’s speech and respond appropriately.
The IoT offers potentially revolutionary benefits to users. But at the same time there are also
huge security and privacy risks. For example, attackers, via the Internet, might be able to hack
into IoT devices or into the servers collecting data from IoT devices. For example, an attacker
could hijack an Internet-connected doll and talk directly with a child; or an attacker could hack
into a database that stores ­ personal health and activity information collected from wearable
devices. These security and privacy concerns could undermine the consumer confidence
necessary for the ­ technologies to meet their full potential and may result in less widespread
adoption [FTC 2015].
1.2.1 Access Networks
Having considered the applications and end systems at the “edge of the network,” let’s next consider the
access network—the network that physically connects an end system to the first router (also known as
the “edge router”) on a path from the end system to any other distant end system. Figure 1.4 shows
several types of accessFigure 1.4 Access networks
networks with thick, shaded lines and the settings (home, enterprise, and wide-area mobile wireless) in
which they are used.
Home Access: DSL, Cable, FTTH, Dial-Up, and SatelliteIn developed countries as of 2014, more than 78 percent of the households have Internet access, with
Korea, Netherlands, Finland, and Sweden leading the way with more than 80 percent of households
having Internet access, almost all via a high-speed broadband connection [ITU 2015]. Given this
widespread use of home access networks let’s begin our overview of access networks by considering
how homes connect to the Internet.
Today, the two most prevalent types of broadband residential access are digital subscriber line (DSL)
and cable. A residence typically obtains DSL Internet access from the same local telephone company
(telco) that provides its wired local phone access. Thus, when DSL is used, a customer’s telco is also its
ISP. As shown in Figure 1.5, each customer’s DSL modem uses the existing telephone line (twisted-
pair copper wire, which we’ll discuss in Section 1.2.2) to exchange data with a digital subscriber line
access multiplexer (DSLAM) located in the telco’s local central office (CO). The home’s DSL modem
takes digital data and translates it to high-­ frequency tones for transmission over telephone wires to the
CO; the analog signals from many such houses are translated back into digital format at the DSLAM.
The residential telephone line carries both data and traditional telephone signals simultaneously, which
are encoded at different frequencies:
A high-speed downstream channel, in the 50 kHz to 1 MHz band
A medium-speed upstream channel, in the 4 kHz to 50 kHz band
An ordinary two-way telephone channel, in the 0 to 4 kHz band
This approach makes the single DSL link appear as if there were three separate links, so that a
telephone call and an Internet connection can share the DSL link at the same time.
Figure 1.5 DSL Internet access
(We’ll describe this technique of frequency-division multiplexing in Section 1.3.1.) On the customer side,
a splitter separates the data and telephone signals arriving to the home and forwards the data signal tothe DSL modem. On the telco side, in the CO, the DSLAM separates the data and phone signals and
sends the data into the Internet. Hundreds or even thousands of households connect to a single DSLAM
[Dischinger 2007].
The DSL standards define multiple transmission rates, including 12 Mbps downstream and 1.8 Mbps
upstream [ITU 1999], and 55 Mbps downstream and 15 Mbps upstream [ITU 2006]. Because the
downstream and upstream rates are different, the access is said to be asymmetric. The actual
downstream and upstream transmission rates achieved may be less than the rates noted above, as the
DSL provider may purposefully limit a residential rate when tiered service (different rates, available at
different prices) are offered. The maximum rate is also limited by the distance between the home and
the CO, the gauge of the twisted-pair line and the degree of electrical interference. Engineers have
expressly designed DSL for short distances between the home and the CO; generally, if the residence is
not located within 5 to 10 miles of the CO, the residence must resort to an alternative form of Internet
access.
While DSL makes use of the telco’s existing local telephone infrastructure, cable Internet access
makes use of the cable television company’s existing cable television infrastructure. A residence obtains
cable Internet access from the same company that provides its cable television. As illustrated in Figure
1.6, fiber optics connect the cable head end to neighborhood-level junctions, from which traditional
coaxial cable is then used to reach individual houses and apartments. Each neighborhood junction
typically supports 500 to 5,000 homes. Because both fiber and coaxial cable are employed in this
system, it is often referred to as hybrid fiber coax (HFC).
Figure 1.6 A hybrid fiber-coaxial access network
Cable internet access requires special modems, called cable modems. As with a DSL modem, the cablemodem is typically an external device and connects to the home PC through an Ethernet port. (We will
discuss Ethernet in great detail in Chapter 6.) At the cable head end, the cable modem termination
system (CMTS) serves a similar function as the DSL network’s DSLAM—turning the analog signal sent
from the cable modems in many downstream homes back into digital format. Cable modems divide the
HFC network into two channels, a downstream and an upstream channel. As with DSL, access is
typically asymmetric, with the downstream channel typically allocated a higher transmission rate than
the upstream channel. The ­ DOCSIS 2.0 standard defines downstream rates up to 42.8 Mbps and
upstream rates of up to 30.7 Mbps. As in the case of DSL networks, the maximum achievable rate may
not be realized due to lower contracted data rates or media impairments.
One important characteristic of cable Internet access is that it is a shared broadcast medium. In
particular, every packet sent by the head end travels downstream on every link to every home and every
packet sent by a home travels on the upstream channel to the head end. For this reason, if several
users are simultaneously downloading a video file on the downstream channel, the actual rate at which
each user receives its video file will be significantly lower than the aggregate cable downstream rate. On
the other hand, if there are only a few active users and they are all Web surfing, then each of the users
may actually receive Web pages at the full cable downstream rate, because the users will rarely request
a Web page at exactly the same time. Because the upstream channel is also shared, a distributed
multiple access protocol is needed to coordinate transmissions and avoid collisions. (We’ll discuss this
collision issue in some detail in Chapter 6.)
Although DSL and cable networks currently represent more than 85 percent of residential broadband
access in the United States, an up-and-coming technology that provides even higher speeds is fiber to
the home (FTTH) [FTTH Council 2016]. As the name suggests, the FTTH concept is simple—provide
an optical fiber path from the CO directly to the home. Many countries today—including the UAE, South
Korea, Hong Kong, Japan, Singapore, Taiwan, Lithuania, and Sweden—now have household
penetration rates exceeding 30% [FTTH Council 2016].
There are several competing technologies for optical distribution from the CO to the homes. The
simplest optical distribution network is called direct fiber, with one fiber leaving the CO for each home.
More commonly, each fiber leaving the central office is actually shared by many homes; it is not until the
fiber gets relatively close to the homes that it is split into individual customer-specific fibers. There are
two competing optical-distribution network architectures that perform this splitting: active optical
networks (AONs) and passive optical networks (PONs). AON is essentially switched Ethernet, which is
discussed in Chapter 6.
Here, we briefly discuss PON, which is used in Verizon’s FIOS service. Fig­ ure 1.7 shows FTTH using
the PON distribution architecture. Each home has an optical network terminator (ONT), which is
connected by dedicated optical fiber to a neighborhood splitter. The splitter combines a number of
homes (typically lessFigure 1.7 FTTH Internet access
than 100) onto a single, shared optical fiber, which connects to an optical line ­ terminator (OLT) in the
telco’s CO. The OLT, providing conversion between optical and electrical signals, connects to the
Internet via a telco router. In the home, users connect a home router (typically a wireless router) to the
ONT and access the ­ Internet via this home router. In the PON architecture, all packets sent from OLT
to the splitter are replicated at the splitter (similar to a cable head end).
FTTH can potentially provide Internet access rates in the gigabits per second range. However, most
FTTH ISPs provide different rate offerings, with the higher rates naturally costing more money. The
average downstream speed of US FTTH customers was approximately 20 Mbps in 2011 (compared
with 13 Mbps for cable access networks and less than 5 Mbps for DSL) [FTTH Council 2011b].
Two other access network technologies are also used to provide Internet access to the home. In
locations where DSL, cable, and FTTH are not available (e.g., in some rural settings), a satellite link can
be used to connect a residence to the Internet at speeds of more than 1 Mbps; StarBand and
HughesNet are two such satellite access providers. Dial-up access over traditional phone lines is based
on the same model as DSL—a home modem connects over a phone line to a modem in the ISP.
Compared with DSL and other broadband access networks, dial-up access is excruciatingly slow at 56
kbps.
Access in the Enterprise (and the Home): Ethernet and WiFi
On corporate and university campuses, and increasingly in home settings, a local area network (LAN) is
used to connect an end system to the edge router. Although there are many types of LAN technologies,
Ethernet is by far the most prevalent access technology in corporate, university, and home networks. As
shown in Figure 1.8, Ethernet users use twisted-pair copper wire to connect to an Ethernet switch, a
technology discussed in detail in Chapter 6. The Ethernet switch, or a network of suchFigure 1.8 Ethernet Internet access
interconnected switches, is then in turn connected into the larger Internet. With Ethernet access, users
typically have 100 Mbps or 1 Gbps access to the Ethernet switch, whereas servers may have 1 Gbps or
even 10 Gbps access.
Increasingly, however, people are accessing the Internet wirelessly from laptops, smartphones, tablets,
and other “things” (see earlier sidebar on “Internet of Things”). In a wireless LAN setting, wireless
users transmit/receive packets to/from an access point that is connected into the enterprise’s network
(most likely using wired Ethernet), which in turn is connected to the wired Internet. A wireless LAN user
must typically be within a few tens of meters of the access point. Wireless LAN access based on IEEE
802.11 technology, more colloquially known as WiFi, is now just about everywhere—universities,
business offices, cafes, airports, homes, and even in airplanes. In many cities, one can stand on a street
corner and be within range of ten or twenty base stations (for a browseable global map of 802.11 base
stations that have been discovered and logged on a Web site by people who take great enjoyment in
doing such things, see [wigle.net 2016]). As discussed in detail in Chapter 7, 802.11 today provides a
shared transmission rate of up to more than 100 Mbps.
Even though Ethernet and WiFi access networks were initially deployed in enterprise (corporate,
university) settings, they have recently become relatively common components of home networks. Many
homes combine broadband residential access (that is, cable modems or DSL) with these inexpensive
wireless LAN technologies to create powerful home networks [Edwards 2011]. Figure 1.9 shows a
typical home network. This home network consists of a roaming laptop as well as a wired PC; a base
station (the wireless access point), which communicates with the wireless PC and other wireless
devices in the home; a cable modem, providing broadband access to the Internet; and a router, which
interconnects the base station and the stationary PC with the cable modem. This network allows
household members to have broadband access to the Internet with one member roaming from thekitchen to the backyard to the bedrooms.
Figure 1.9 A typical home network
Wide-Area Wireless Access: 3G and LTE
Increasingly, devices such as iPhones and Android devices are being used to message, share photos in
social networks, watch movies, and stream music while on the run. These devices employ the same
wireless infrastructure used for cellular telephony to send/receive packets through a base station that is
operated by the cellular network provider. Unlike WiFi, a user need only be within a few tens of
kilometers (as opposed to a few tens of meters) of the base station.
Telecommunications companies have made enormous investments in so-called third-generation (3G)
wireless, which provides packet-switched wide-area wireless Internet access at speeds in excess of 1
Mbps. But even higher-speed wide-area access technologies—a fourth-generation (4G) of wide-area
wireless networks—are already being deployed. LTE (for “Long-Term Evolution”—a candidate for Bad
Acronym of the Year Award) has its roots in 3G technology, and can achieve rates in excess of 10
Mbps. LTE downstream rates of many tens of Mbps have been reported in commercial deployments.
We’ll cover the basic principles of wireless networks and mobility, as well as WiFi, 3G, and LTE
technologies (and more!) in Chapter 7.
1.2.2 Physical Media
In the previous subsection, we gave an overview of some of the most important network access
technologies in the Internet. As we described these technologies, we also indicated the physical media
used. For example, we said that HFC uses a combination of fiber cable and coaxial cable. We said that
DSL and Ethernet use copper wire. And we said that mobile access networks use the radio spectrum. In
this subsection we provide a brief overview of these and other transmission media that are commonly
used in the Internet.In order to define what is meant by a physical medium, let us reflect on the brief life of a bit. Consider a
bit traveling from one end system, through a series of links and routers, to another end system. This
poor bit gets kicked around and transmitted many, many times! The source end system first transmits
the bit, and shortly thereafter the first router in the series receives the bit; the first router then transmits
the bit, and shortly thereafter the second router receives the bit; and so on. Thus our bit, when traveling
from source to destination, passes through a series of transmitter-receiver pairs. For each transmitter-
receiver pair, the bit is sent by propagating electromagnetic waves or optical pulses across a physical
medium. The physical medium can take many shapes and forms and does not have to be of the same
type for each transmitter-receiver pair along the path. Examples of physical media include twisted-pair
copper wire, coaxial cable, multimode fiber-optic cable, terrestrial radio spectrum, and satellite radio
spectrum. Physical media fall into two categories: guided media and unguided media. With guided
media, the waves are guided along a solid medium, such as a fiber-optic cable, a twisted-pair copper
wire, or a coaxial cable. With unguided media, the waves propagate in the atmosphere and in outer
space, such as in a wireless LAN or a digital satellite channel.
But before we get into the characteristics of the various media types, let us say a few words about their
costs. The actual cost of the physical link (copper wire, fiber-optic cable, and so on) is often relatively
minor compared with other networking costs. In particular, the labor cost associated with the installation
of the physical link can be orders of magnitude higher than the cost of the material. For this reason,
many builders install twisted pair, optical fiber, and coaxial cable in every room in a building. Even if only
one medium is initially used, there is a good chance that another medium could be used in the near
future, and so money is saved by not having to lay additional wires in the future.
Twisted-Pair Copper Wire
The least expensive and most commonly used guided transmission medium is twisted-pair copper wire.
For over a hundred years it has been used by telephone networks. In fact, more than 99 percent of the
wired connections from the telephone handset to the local telephone switch use twisted-pair copper
wire. Most of us have seen twisted pair in our homes (or those of our parents or grandparents!) and
work environments. Twisted pair consists of two insulated copper wires, each about 1 mm thick,
arranged in a regular spiral pattern. The wires are twisted together to reduce the electrical interference
from similar pairs close by. Typically, a number of pairs are bundled together in a cable by wrapping the
pairs in a protective shield. A wire pair constitutes a single communication link. Unshielded twisted
pair (UTP) is commonly used for computer networks within a building, that is, for LANs. Data rates for
LANs using twisted pair today range from 10 Mbps to 10 Gbps. The data rates that can be achieved
depend on the thickness of the wire and the distance between transmitter and receiver.
When fiber-optic technology emerged in the 1980s, many people disparaged twisted pair because of its
relatively low bit rates. Some people even felt that fiber-optic technology would completely replace
twisted pair. But twisted pair did not give up so easily. Modern twisted-pair technology, such as category6a cable, can achieve data rates of 10 Gbps for distances up to a hundred meters. In the end, twisted
pair has emerged as the dominant solution for high-speed LAN networking.
As discussed earlier, twisted pair is also commonly used for residential Internet access. We saw that
dial-up modem technology enables access at rates of up to 56 kbps over twisted pair. We also saw that
DSL (digital subscriber line) technology has enabled residential users to access the Internet at tens of
Mbps over twisted pair (when users live close to the ISP’s central office).
Coaxial Cable
Like twisted pair, coaxial cable consists of two copper conductors, but the two conductors are concentric
rather than parallel. With this construction and special insulation and shielding, coaxial cable can
achieve high data transmission rates. Coaxial cable is quite common in cable television systems. As we
saw earlier, cable television systems have recently been coupled with cable modems to provide
residential users with Internet access at rates of tens of Mbps. In cable television and cable Internet
access, the transmitter shifts the digital signal to a specific frequency band, and the resulting analog
signal is sent from the transmitter to one or more receivers. Coaxial cable can be used as a guided
shared medium. Specifically, a number of end systems can be connected directly to the cable, with
each of the end systems receiving whatever is sent by the other end systems.
Fiber Optics
An optical fiber is a thin, flexible medium that conducts pulses of light, with each pulse representing a
bit. A single optical fiber can support tremendous bit rates, up to tens or even hundreds of gigabits per
second. They are immune to electromagnetic interference, have very low signal attenuation up to 100
kilometers, and are very hard to tap. These characteristics have made fiber optics the preferred long-
haul guided transmission media, particularly for overseas links. Many of the long-distance telephone
networks in the United States and elsewhere now use fiber optics exclusively. Fiber optics is also
prevalent in the backbone of the Internet. However, the high cost of optical devices—such as
transmitters, receivers, and switches—has hindered their deployment for short-haul transport, such as in
a LAN or into the home in a residential access network. The Optical Carrier (OC) standard link speeds
range from 51.8 Mbps to 39.8 Gbps; these specifications are often referred to as OC-n, where the link
speed equals n ∞ 51.8 Mbps. Standards in use today include OC-1, OC-3, OC-12, OC-24, OC-48, OC-
96, OC-192, OC-768. [Mukherjee 2006, Ramaswami 2010] provide coverage of various aspects of
optical networking.
Terrestrial Radio Channels
Radio channels carry signals in the electromagnetic spectrum. They are an attractive medium because
they require no physical wire to be installed, can penetrate walls, provide connectivity to a mobile user,and can potentially carry a signal for long distances. The characteristics of a radio channel depend
significantly on the propagation environment and the distance over which a signal is to be carried.
Environmental considerations determine path loss and shadow fading (which decrease the signal
strength as the signal travels over a distance and around/through obstructing objects), multipath fading
(due to signal reflection off of interfering objects), and interference (due to other transmissions and
electromagnetic signals).
Terrestrial radio channels can be broadly classified into three groups: those that operate over very short
distance (e.g., with one or two meters); those that operate in local areas, typically spanning from ten to a
few hundred meters; and those that operate in the wide area, spanning tens of kilometers. Personal
devices such as wireless headsets, keyboards, and medical devices operate over short distances; the
wireless LAN technologies described in Section 1.2.1 use local-area radio channels; the cellular access
technologies use wide-area radio channels. We’ll discuss radio channels in detail in Chapter 7.
Satellite Radio Channels
A communication satellite links two or more Earth-based microwave transmitter/ receivers, known as
ground stations. The satellite receives transmissions on one frequency band, regenerates the signal
using a repeater (discussed below), and transmits the signal on another frequency. Two types of
satellites are used in communications: geostationary satellites and low-earth orbiting (LEO)
satellites [Wiki Satellite 2016].
Geostationary satellites permanently remain above the same spot on Earth. This stationary presence is
achieved by placing the satellite in orbit at 36,000 kilometers above Earth’s surface. This huge distance
from ground station through satellite back to ground station introduces a substantial signal propagation
delay of 280 milliseconds. Nevertheless, satellite links, which can operate at speeds of hundreds of
Mbps, are often used in areas without access to DSL or cable-based Internet access.
LEO satellites are placed much closer to Earth and do not remain permanently above one spot on Earth.
They rotate around Earth (just as the Moon does) and may communicate with each other, as well as
with ground stations. To provide continuous coverage to an area, many satellites need to be placed in
orbit. There are currently many low-altitude communication systems in development. LEO satellite
technology may be used for Internet access sometime in the future.1.3 The Network Core
Having examined the Internet’s edge, let us now delve more deeply inside the network core—the mesh
of packet switches and links that interconnects the Internet’s end systems. Figure 1.10 highlights the
network core with thick, shaded lines.Figure 1.10 The network core
1.3.1 Packet Switching
In a network application, end systems exchange messages with each other. Messages can contain
anything the application designer wants. Messages may perform a control function (for example, the “Hi”
messages in our handshaking example in Figure 1.2) or can contain data, such as an e-mail message,
a JPEG image, or an MP3 audio file. To send a message from a source end system to a destination end
system, the source breaks long messages into smaller chunks of data known as packets. Between
source and destination, each packet travels through communication links and packet switches (for
which there are two predominant types, routers and link-layer switches). Packets are transmitted over
each communication link at a rate equal to the full transmission rate of the link. So, if a source end
system or a packet switch is sending a packet of L bits over a link with transmission rate R bits/sec, then
the time to transmit the packet is L / R seconds.
Store-and-Forward Transmission
Most packet switches use store-and-forward transmission at the inputs to the links. Store-and-forward
transmission means that the packet switch must receive the entire packet before it can begin to transmit
the first bit of the packet onto the outbound link. To explore store-and-forward transmission in more
detail, consider a simple network consisting of two end systems connected by a single router, as shown
in Figure 1.11. A router will typically have many incident links, since its job is to switch an incoming
packet onto an outgoing link; in this simple example, the router has the rather simple task of transferring
a packet from one (input) link to the only other attached link. In this example, the source has three
packets, each consisting of L bits, to send to the destination. At the snapshot of time shown in Figure
1.11, the source has transmitted some of packet 1, and the front of packet 1 has already arrived at the
router. Because the router employs store-and-forwarding, at this instant of time, the router cannot
transmit the bits it has received; instead it must first buffer (i.e., “store”) the packet’s bits. Only after the
router has received all of the packet’s bits can it begin to transmit (i.e., “forward”) the packet onto the
outbound link. To gain some insight into store-and-forward transmission, let’s now calculate the amount
of time that elapses from when the source begins to send the packet until the destination has received
the entire packet. (Here we will ignore propagation delay—the time it takes for the bits to travel across
the wire at near the speed of light—which will be discussed in Section 1.4.) The source begins to
transmit at time 0; at time L/R seconds, the source has transmitted the entire packet, and the entire
packet has been received and stored at the router (since there is no propagation delay). At time L/R
seconds, since the router has just received the entire packet, it can begin to transmit the packet onto the
outbound link towards the destination; at time 2L/R, the router has transmitted the entire packet, and theentire packet has been received by the destination. Thus, the total delay is 2L/R. If the
Figure 1.11 Store-and-forward packet switching
switch instead forwarded bits as soon as they arrive (without first receiving the entire packet), then the
total delay would be L/R since bits are not held up at the router. But, as we will discuss in Section 1.4,
routers need to receive, store, and process the entire packet before forwarding.
Now let’s calculate the amount of time that elapses from when the source begins to send the first packet
until the destination has received all three packets. As before, at time L/R, the router begins to forward
the first packet. But also at time L/R the source will begin to send the second packet, since it has just
finished sending the entire first packet. Thus, at time 2L/R, the destination has received the first packet
and the router has received the second packet. Similarly, at time 3L/R, the destination has received the
first two packets and the router has received the third packet. Finally, at time 4L/R the destination has
received all three packets!
Let’s now consider the general case of sending one packet from source to destination over a path
consisting of N links each of rate R (thus, there are N-1 routers between source and destination).
Applying the same logic as above, we see that the end-to-end delay is:
dend-to-end=NLR
(1.1)
You may now want to try to determine what the delay would be for P packets sent over a series of N
links.
Queuing Delays and Packet Loss
Each packet switch has multiple links attached to it. For each attached link, the packet switch has an
output buffer (also called an output queue), which stores packets that the router is about to send into
that link. The output buffers play a key role in packet switching. If an arriving packet needs to be
transmitted onto a link but finds the link busy with the transmission of another packet, the arriving packet
must wait in the output buffer. Thus, in addition to the store-and-forward delays, packets suffer output
buffer queuing delays. These delays are variable and depend on the level of congestion in the network.Since the amount of buffer space is finite, an
Figure 1.12 Packet switching
arriving packet may find that the buffer is completely full with other packets waiting for transmission. In
this case, packet loss will occur—either the arriving packet or one of the already-queued packets will
be dropped.
Figure 1.12 illustrates a simple packet-switched network. As in Figure 1.11, packets are represented by
three-dimensional slabs. The width of a slab represents the number of bits in the packet. In this figure,
all packets have the same width and hence the same length. Suppose Hosts A and B are sending
packets to Host E. Hosts A and B first send their packets along 100 Mbps Ethernet links to the first
router. The router then directs these packets to the 15 Mbps link. If, during a short interval of time, the
arrival rate of packets to the router (when converted to bits per second) exceeds 15 Mbps, congestion
will occur at the router as packets queue in the link’s output buffer before being transmitted onto the link.
For example, if Host A and B each send a burst of five packets back-to-back at the same time, then
most of these packets will spend some time waiting in the queue. The situation is, in fact, entirely
analogous to many common-day situations—for example, when we wait in line for a bank teller or wait in
front of a tollbooth. We’ll examine this queuing delay in more detail in Section 1.4.
Forwarding Tables and Routing Protocols
Earlier, we said that a router takes a packet arriving on one of its attached communication links and
forwards that packet onto another one of its attached communication links. But how does the router
determine which link it should forward the packet onto? Packet forwarding is actually done in different
ways in different types of computer networks. Here, we briefly describe how it is done in the Internet.In the Internet, every end system has an address called an IP address. When a source end system
wants to send a packet to a destination end system, the source includes the destination’s IP address in
the packet’s header. As with postal addresses, this address has a hierarchical structure. When a packet
arrives at a router in the network, the router examines a portion of the packet’s destination address and
forwards the packet to an adjacent router. More specifically, each router has a forwarding table that
maps destination addresses (or portions of the destination addresses) to that router’s outbound links.
When a packet arrives at a router, the router examines the address and searches its forwarding table,
using this destination address, to find the appropriate outbound link. The router then directs the packet
to this outbound link.
The end-to-end routing process is analogous to a car driver who does not use maps but instead prefers
to ask for directions. For example, suppose Joe is driving from Philadelphia to 156 Lakeside Drive in
Orlando, Florida. Joe first drives to his neighborhood gas station and asks how to get to 156 Lakeside
Drive in Orlando, Florida. The gas station attendant extracts the Florida portion of the address and tells
Joe that he needs to get onto the interstate highway I-95 South, which has an entrance just next to the
gas station. He also tells Joe that once he enters Florida, he should ask someone else there. Joe then
takes I-95 South until he gets to Jacksonville, Florida, at which point he asks another gas station
attendant for directions. The attendant extracts the Orlando portion of the address and tells Joe that he
should continue on I-95 to Daytona Beach and then ask someone else. In Daytona Beach, another gas
station attendant also extracts the Orlando portion of the address and tells Joe that he should take I-4
directly to Orlando. Joe takes I-4 and gets off at the Orlando exit. Joe goes to another gas station
attendant, and this time the attendant extracts the Lakeside Drive portion of the address and tells Joe
the road he must follow to get to Lakeside Drive. Once Joe reaches Lakeside Drive, he asks a kid on a
bicycle how to get to his destination. The kid extracts the 156 portion of the address and points to the
house. Joe finally reaches his ultimate destination. In the above analogy, the gas station attendants and
kids on bicycles are analogous to routers.
We just learned that a router uses a packet’s destination address to index a forwarding table and
determine the appropriate outbound link. But this statement begs yet another question: How do
forwarding tables get set? Are they configured by hand in each and every router, or does the Internet
use a more automated procedure? This issue will be studied in depth in Chapter 5. But to whet your
appetite here, we’ll note now that the Internet has a number of special routing protocols that are used
to automatically set the forwarding tables. A routing protocol may, for example, determine the shortest
path from each router to each destination and use the shortest path results to configure the forwarding
tables in the routers.
How would you actually like to see the end-to-end route that packets take in the Internet? We now invite
you to get your hands dirty by interacting with the Trace-route program. Simply visit the site
www.traceroute.org, choose a source in a particular country, and trace the route from that source to
your computer. (For a discussion of Traceroute, see Section 1.4.)1.3.2 Circuit Switching
There are two fundamental approaches to moving data through a network of links and switches: circuit
switching and packet switching. Having covered packet-switched networks in the previous
subsection, we now turn our attention to circuit-switched networks.
In circuit-switched networks, the resources needed along a path (buffers, link transmission rate) to
provide for communication between the end systems are reserved for the duration of the communication
session between the end systems. In packet-switched networks, these resources are not reserved; a
session’s messages use the resources on demand and, as a consequence, may have to wait (that is,
queue) for access to a communication link. As a simple analogy, consider two restaurants, one that
requires reservations and another that neither requires reservations nor accepts them. For the
restaurant that requires reservations, we have to go through the hassle of calling before we leave home.
But when we arrive at the restaurant we can, in principle, immediately be seated and order our meal.
For the restaurant that does not require reservations, we don’t need to bother to reserve a table. But
when we arrive at the restaurant, we may have to wait for a table before we can be seated.
Traditional telephone networks are examples of circuit-switched networks. ­ Consider what happens
when one person wants to send information (voice or facsimile) to another over a telephone network.
Before the sender can send the information, the network must establish a connection between the
sender and the receiver. This is a bona fide connection for which the switches on the path between the
sender and receiver maintain connection state for that connection. In the jargon of telephony, this
connection is called a circuit. When the network establishes the circuit, it also reserves a constant
transmission rate in the network’s links (representing a fraction of each link’s transmission capacity) for
the duration of the connection. Since a given transmission rate has been reserved for this sender-to-
receiver connection, the sender can transfer the data to the receiver at the guaranteed constant rate.
Figure 1.13 illustrates a circuit-switched network. In this network, the four circuit switches are
interconnected by four links. Each of these links has four circuits, so that each link can support four
simultaneous connections. The hosts (for example, PCs and workstations) are each directly connected
to one of the switches. When two hosts want to communicate, the network establishes a dedicated end-
to-end connection between the two hosts. Thus, in order for Host A to communicate with Host B, the
network must first reserve one circuit on each of two links. In this example, the dedicated end-to-end
connection uses the second circuit in the first link and the fourth circuit in the second link. Because each
link has four circuits, for each link used by the end-to-end connection, the connection gets one fourth of
the link’s total transmission capacity for the duration of the connection. Thus, for example, if each link
between adjacent switches has a transmission rate of 1 Mbps, then each end-to-end circuit-switch
connection gets 250 kbps of dedicated transmission rate.Figure 1.13 A simple circuit-switched network consisting of four switches and four links
In contrast, consider what happens when one host wants to send a packet to another host over a
packet-switched network, such as the Internet. As with circuit switching, the packet is transmitted over a
series of communication links. But different from circuit switching, the packet is sent into the network
without reserving any link resources whatsoever. If one of the links is congested because other packets
need to be transmitted over the link at the same time, then the packet will have to wait in a buffer at the
sending side of the transmission link and suffer a delay. The Internet makes its best effort to deliver
packets in a timely manner, but it does not make any guarantees.
Multiplexing in Circuit-Switched Networks
A circuit in a link is implemented with either frequency-division multiplexing (FDM) or time-division
multiplexing (TDM). With FDM, the frequency spectrum of a link is divided up among the connections
established across the link. Specifically, the link dedicates a frequency band to each connection for the
duration of the connection. In telephone networks, this frequency band typically has a width of 4 kHz
(that is, 4,000 hertz or 4,000 cycles per second). The width of the band is called, not surprisingly, the
bandwidth. FM radio stations also use FDM to share the frequency spectrum between 88 MHz and 108
MHz, with each station being allocated a specific frequency band.
For a TDM link, time is divided into frames of fixed duration, and each frame is divided into a fixed
number of time slots. When the network establishes a connection across a link, the network dedicates
one time slot in every frame to this connection. These slots are dedicated for the sole use of that
connection, with one time slot available for use (in every frame) to transmit the connection’s data.Figure 1.14
With FDM, each circuit continuously gets a fraction of the bandwidth. With TDM, each circuit gets all of
the bandwidth periodically during brief intervals of time (that is, during slots)
Figure 1.14 illustrates FDM and TDM for a specific network link supporting up to four circuits. For FDM,
the frequency domain is segmented into four bands, each of bandwidth 4 kHz. For TDM, the time
domain is segmented into frames, with four time slots in each frame; each circuit is assigned the same
dedicated slot in the revolving TDM frames. For TDM, the transmission rate of a circuit is equal to the
frame rate multiplied by the number of bits in a slot. For example, if the link transmits 8,000 frames per
second and each slot consists of 8 bits, then the transmission rate of each circuit is 64 kbps.
Proponents of packet switching have always argued that circuit switching is wasteful because the
dedicated circuits are idle during silent periods. For example, when one person in a telephone call
stops talking, the idle network resources (frequency bands or time slots in the links along the
connection’s route) cannot be used by other ongoing connections. As another example of how these
resources can be underutilized, consider a radiologist who uses a circuit-switched network to remotely
access a series of x-rays. The radiologist sets up a connection, requests an image, contemplates the
image, and then requests a new image. Network resources are allocated to the connection but are not
used (i.e., are wasted) during the radiologist’s contemplation periods. Proponents of packet switching
also enjoy pointing out that establishing end-to-end circuits and reserving end-to-end transmission
capacity is complicated and requires complex signaling software to coordinate the operation of the
switches along the end-to-end path.
Before we finish our discussion of circuit switching, let’s work through a numerical example that should
shed further insight on the topic. Let us consider how long it takes to send a file of 640,000 bits from
Host A to Host B over a circuit-switched network. Suppose that all links in the network use TDM with 24
slots and have a bit rate of 1.536 Mbps. Also suppose that it takes 500 msec to establish an end-to-end
circuit before Host A can begin to transmit the file. How long does it take to send the file? Each circuit
has a transmission rate of (1.536 Mbps)/24=64 kbps, so it takes (640,000 bits)/(64 kbps)=10 seconds to
transmit the file. To this 10 seconds we add the circuit establishment time, giving 10.5 seconds to send
the file. Note that the transmission time is independent of the number of links: The transmission time
would be 10 seconds if the end-to-end circuit passed through one link or a hundred links. (The actualend-to-end delay also includes a propagation delay; see Section 1.4.)
Packet Switching Versus Circuit Switching
Having described circuit switching and packet switching, let us compare the two. Critics of packet
switching have often argued that packet switching is not suitable for real-time services (for example,
telephone calls and video conference calls) because of its variable and unpredictable end-to-end delays
(due primarily to variable and unpredictable queuing delays). Proponents of packet switching argue that
(1) it offers better sharing of transmission capacity than circuit switching and (2) it is simpler, more
efficient, and less costly to implement than circuit switching. An interesting discussion of packet
switching versus circuit switching is [Molinero-Fernandez 2002]. Generally speaking, people who do
not like to hassle with ­ restaurant reservations prefer packet switching to circuit switching.
Why is packet switching more efficient? Let’s look at a simple example. Suppose users share a 1 Mbps
link. Also suppose that each user alternates between periods of activity, when a user generates data at
a constant rate of 100 kbps, and periods of inactivity, when a user generates no data. Suppose further
that a user is active only 10 percent of the time (and is idly drinking coffee during the remaining 90
percent of the time). With circuit switching, 100 kbps must be reserved for each user at all times. For
example, with circuit-switched TDM, if a one-second frame is divided into 10 time slots of 100 ms each,
then each user would be allocated one time slot per frame.
